#!/usr/bin/env ruby
if ARGV.size == 0 || ARGV.include?('--help')
  puts "Usage: crocodile [options] source dest" 
  puts ""
  puts "  --start            Start the selenium server"
  puts "  --stop             Stop the selenium server"
  puts "  --width=WIDTH      Set the width of the window"
  puts "  --height=HEIGHT    Set the height of the window"
  puts "  --script=SCRIPT    Execute arbitrary javascript in the window"
  puts "  --control=CODE     Execute control code"
  puts "  --timeout=TIMEOUT  Stop waiting"
  puts "  --help"
  exit
end

require 'rubygems'
require 'crocodile'
require 'net/http'

def opt(name)
  p = ARGV.select{|arg| arg =~ /^--#{name}=/}.first
  p.gsub(/^--#{name}=/, '') if p
end

width = opt "width"
height = opt "height"
script = opt "script"
control = opt "control"
timeout = opt "timeout"

options = {}
options[:start] = true if ARGV.include? '--start'
options[:stop] = true if ARGV.include? '--start'
options[:width] = width if width
options[:height] = height if height
options[:timeout] = timeout if timeout

# Grab the params
params = ARGV.reject{|arg| arg =~ /^--/}
source = params[0] rescue nil
dest = params[1] rescue nil
if source.nil? || dest.nil?
  Crocodile.start if options[:start]
  Crocodile.stop if options[:start]
  exit
end

source_uri = URI.parse(source)
if (source_uri.relative?)
  source_path = File.expand_path(source)
  source_base = "file://"
else
  source_path = source_uri.path
  source_base = source.gsub(Regexp.new(source_path + "$"), '')
end  

Crocodile.snap(source_base, source_path, dest, options) do |browser|
  eval control if control
  browser.get_eval script if script
end